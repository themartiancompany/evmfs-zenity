#!/usr/bin/env bash

# SPDX-License-Identifier: AGPL-3.0-or-later

#    ----------------------------------------------------------------------
#    Copyright Â© 2025  Pellegrino Prevete
#
#    All rights reserved
#    ----------------------------------------------------------------------
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

_bin="$( \
  dirname \
    "$( \
      command \
        -v \
	  "env")")"
_lib="$( \
  realpath \
    "${_bin}/../lib")"
_crash_bash="${_lib}/libcrash-bash/crash-bash"
_sourced \
  "${_crash_bash}" 2>/dev/null || \
  source \
    "${_crash_bash}"

_global_variables() {
  run_date=""
  color=""
  quiet=""
}

_requirements() {
  _check_cmd \
    "evmfs-get" \
    "evmfs"
  _check_cmd \
    "zenity"
}

_evmfs_get_zenity() {
  local \
    _uri_input_opts=() \
    _target_uri \
    _title \
    _entry_label \
    _ok_label \
    _cancel_label \
    _save_as_opts=() \
    _output_file \
    _download_start_opts=() \
    _download_start_label=()
  _title="Ethereum Virtual File System File Downloader"
  _entry_label="EVMFS URI" \
  _ok_label="Save as"
  _cancel_label="Close"
  _download_start_label=(
    "Download has started."
    "A completion notification will"
    "appear when complete."
  )
  _download_start_opts+=(
    --icon="folder-download-symbolic"
    --notification
    --text="${_download_start_label[*]}"
  )
  _uri_input_opts+=(
    --title="${_title}"
    --forms
    --add-entry="${_entry_label}"
    --ok-label="${_ok_label}"
    --cancel-label="${_cancel_label}"
  )
  _save_as_opts+=(
    --file-selection
    --save
  )
  _target_uri="$( \
    zenity \
      "${_uri_input_opts[@]}")"
  _msg_info \
    "Target URI: '${_target_uri}'."
  _output_file="$( \
    zenity \
      "${_save_as_opts[@]}")"
  _msg_info \
    "Output file: '${_output_file}'."
  _download_end_label=(
    "Download of file '${_output_file}' complete."
  )
  _download_end_opts=(
    --icon="folder-download-symbolic"
    --notification
    --text="${_download_end_label[*]}"
  )
  zenity \
    "${_download_start_opts[@]}"
  evmfs-get \
    -v \
    -o \
      "${_output_file}" \
    "${_target_uri}"
  zenity \
    "${_download_end_opts[@]}"
}

_set_overrides() {
  if [[ -v override_quiet ]]; then
    quiet="${override_quiet}"
  elif [[ -z "${quiet}" ]]; then
    quiet="y"
  fi
  if [[ -v override_color ]]; then
    color="${override_color}"
  elif [[ -z "${color}" ]]; then
    color="n"
  fi
  _set_override \
    "run" \
    "date" \
    "$(_get_date_human)"
}

# Show help usage, with an exit status.
# $1: exit status number.
_usage() {
  local \
    _usage_text
  IFS='' \
    read \
      -r \
      -d '' \
      _usage_text << \
        ENDUSAGETEXT || true
Simple Ethereum Virtual Machine File System file downloader

Usage:
  ${app_name}

  options:
     -h                     This message.
     -c                     Enable color output
     -v                     Enable verbose output
ENDUSAGETEXT
  _printf \
    '%s\n' \
    "${_usage_text}"
  exit \
    "${1}"
}

# Shows configuration options.
_show_config() {
  _msg_info "${app_name} configuration"
  _msg_info "                   Run date:   ${run_date}"
}

_globals
_global_variables
_requirements
# shellcheck disable=SC2034
while \
  getopts \
    'cvh?' \
    arg; do
  case \
    "${arg}" in
    c) override_color="y" ;;
    v) override_quiet="n" ;;
    h|?) _set_overrides && \
         _usage \
           0 ;;
    *)
    _msg_error \
      "Invalid argument '${arg}'." \
      0
    _usage \
      1
    ;;
  esac
done
shift \
  $(( \
    OPTIND - 1 \
  ))
_set_overrides
_show_config
_evmfs_get_zenity
